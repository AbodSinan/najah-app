"""
Django settings for najah project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import boto3

from firebase_admin import initialize_app
initialize_app()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


try:
    AWS_REGION="ap-southeast-1"
    boto3.setup_default_session(region_name=AWS_REGION)
    ssm = boto3.client('ssm')

    response = ssm.get_parameters(
        Names=['S3_STORAGE_BUCKET_NAME', 'S3_SECRET_ACCESS_KEY', 'S3_ACCESS_KEY_ID', 'NAJAH_DB_URL', 'NAJAH_DB_PASSWORD', 'NAJAH_DB_USER'],
        WithDecryption=True
    )

    AWS_PARAMS = {x['Name']: x['Value'] for x in response['Parameters']}
    AWS_STORAGE_BUCKET_NAME = AWS_PARAMS.get("S3_STORAGE_BUCKET_NAME", None)

    NAJAH_DB_USER = AWS_PARAMS.get("NAJAH_DB_USER", "postgres")
    NAJAH_DB_URL = AWS_PARAMS.get("NAJAH_DB_URL", None)
    NAJAH_DB_PASSWORD = AWS_PARAMS.get("NAJAH_DB_PASSWORD", None)

except:
    print("UNABLE TO CONNECT TO S3")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7m%yose%ey1w#&ndaxd#4m)!#s**m*%$e-8m+t*@=$jb6yy7i+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "ec2-13-228-213-53.ap-southeast-1.compute.amazonaws.com",
    "localhost",
    "127.0.0.1",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework.authtoken',
    'rest_framework',
    'corsheaders',
    'enumfields',
    'authentication',
    'payment',
    'booking',
    'private',
    'profile',
    'education',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = ['authentication.authentication.EmailBackend']

CORS_ORIGIN_ALLOW_ALL=True

CSRF_TRUSTED_ORIGINS = ["https://i-najah.herokuapp.com"]

ROOT_URLCONF = 'najah.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'najah.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': "django.db.backends.mysql",
        "NAME": "najah",
        "USER": NAJAH_DB_USER,
        "PASSWORD": NAJAH_DB_PASSWORD,
        "HOST": NAJAH_DB_URL,
        "PORT": os.getenv("DB_PORT_AUTH", 5432),
    }
}

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES" : [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ]
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

IS_USER_TYPE_ENABLED = False
SKIP_PAYMENT = True
